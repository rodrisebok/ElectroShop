{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\tp\\\\ElectroShop\\\\frontEnd\\\\src\\\\components\\\\carouselProducts.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './productCard';\r\n\r\nconst ProductCarousel = ({ products = [] }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [displayedProducts, setDisplayedProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      // Duplicamos los productos para el efecto infinito\r\n      setDisplayedProducts([...products, ...products, ...products]);\r\n    }\r\n  }, [products]);\r\n\r\n  // Función para avanzar a la siguiente diapositiva\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % products.length);\r\n  };\r\n\r\n  // Función para retroceder a la diapositiva anterior\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + products.length) % products.length);\r\n  };\r\n\r\n  // Mostramos los productos visibles basados en el índice actual\r\n  // 3 productos visibles a la vez\r\n  const visibleProducts = displayedProducts.slice(currentIndex, currentIndex + 3);\r\n\r\n  return (\r\n    <div className=\"product-carousel\">\r\n      <div className=\"carouselProducts-container\">\r\n        <button className=\"carouselProducts-control prev\" onClick={prevSlide}>\r\n          &#10094;\r\n        </button>\r\n\r\n        <div className=\"carouselProducts-items\">\r\n          {visibleProducts.map((product, index) => (\r\n            <div\r\n              key={product._id}\r\n              className={`carouselProduct-item ${index === 1 ? 'center' : ''}`}\r\n            >\r\n              <ProductCard\r\n                key={product._id}\r\n                image={product.image}\r\n                name={product.name}\r\n                price={`$${product.price}`}\r\n                category={product.category}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        <button className=\"carouselProducts-control next\" onClick={nextSlide}>\r\n          &#10095;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n*/\nimport React, { useState, useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Autoplay } from \"swiper/modules\";\nimport \"swiper/css\";\nimport \"../styles/styles.css\";\nimport ProductCard from './productCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductCarousel = ({\n  products = []\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    console.log('Productos recibidos en el carrusel:', products);\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-carousel\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      spaceBetween: 0 // Espacio entre las tarjetas\n      ,\n      slidesPerView: 3 // Muestra 3 tarjetas a la vez\n      ,\n      loop: true // Carrusel infinito\n      ,\n      autoplay: {\n        delay: 2000,\n        disableOnInteraction: false\n      } // Autoplay con retención\n      ,\n      modules: [Autoplay],\n      onSlideChange: swiper => setCurrentIndex(swiper.realIndex) // Actualizar el índice actual\n      ,\n      children: products.map(product => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(ProductCard, {\n          image: product.image,\n          name: product.name,\n          price: `$${product.price}`,\n          category: product.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductCarousel, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = ProductCarousel;\nexport default ProductCarousel;\nvar _c;\n$RefreshReg$(_c, \"ProductCarousel\");","map":{"version":3,"names":["React","useState","useEffect","Swiper","SwiperSlide","Autoplay","ProductCard","jsxDEV","_jsxDEV","ProductCarousel","products","_s","currentIndex","setCurrentIndex","console","log","className","children","spaceBetween","slidesPerView","loop","autoplay","delay","disableOnInteraction","modules","onSlideChange","swiper","realIndex","map","product","image","name","price","category","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["C:/Users/rodri/tp/ElectroShop/frontEnd/src/components/carouselProducts.jsx"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './productCard';\r\n\r\nconst ProductCarousel = ({ products = [] }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [displayedProducts, setDisplayedProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      // Duplicamos los productos para el efecto infinito\r\n      setDisplayedProducts([...products, ...products, ...products]);\r\n    }\r\n  }, [products]);\r\n\r\n  // Función para avanzar a la siguiente diapositiva\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % products.length);\r\n  };\r\n\r\n  // Función para retroceder a la diapositiva anterior\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + products.length) % products.length);\r\n  };\r\n\r\n  // Mostramos los productos visibles basados en el índice actual\r\n  // 3 productos visibles a la vez\r\n  const visibleProducts = displayedProducts.slice(currentIndex, currentIndex + 3);\r\n\r\n  return (\r\n    <div className=\"product-carousel\">\r\n      <div className=\"carouselProducts-container\">\r\n        <button className=\"carouselProducts-control prev\" onClick={prevSlide}>\r\n          &#10094;\r\n        </button>\r\n\r\n        <div className=\"carouselProducts-items\">\r\n          {visibleProducts.map((product, index) => (\r\n            <div\r\n              key={product._id}\r\n              className={`carouselProduct-item ${index === 1 ? 'center' : ''}`}\r\n            >\r\n              <ProductCard\r\n                key={product._id}\r\n                image={product.image}\r\n                name={product.name}\r\n                price={`$${product.price}`}\r\n                category={product.category}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n\r\n        <button className=\"carouselProducts-control next\" onClick={nextSlide}>\r\n          &#10095;\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n*/\r\nimport React,{useState,useEffect} from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay } from \"swiper/modules\";\r\nimport \"swiper/css\";\r\nimport \"../styles/styles.css\";\r\n\r\n\r\nimport ProductCard from './productCard';\r\n\r\nconst ProductCarousel = ({ products = [] }) => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log('Productos recibidos en el carrusel:', products);\r\n  }, [products]);\r\n\r\n  return (\r\n    <div className=\"product-carousel\">\r\n      <Swiper\r\n        spaceBetween={0} // Espacio entre las tarjetas\r\n        slidesPerView={3} // Muestra 3 tarjetas a la vez\r\n        loop={true} // Carrusel infinito\r\n        autoplay={{ delay: 2000, disableOnInteraction: false }} // Autoplay con retención\r\n        modules={[Autoplay]}\r\n        onSlideChange={(swiper) => setCurrentIndex(swiper.realIndex)} // Actualizar el índice actual\r\n      >\r\n        {products.map((product) => (\r\n          <SwiperSlide key={product._id}>\r\n            <ProductCard\r\n              image={product.image}\r\n              name={product.name}\r\n              price={`$${product.price}`}\r\n              category={product.category}\r\n            />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,MAAM,EAAEC,WAAW,QAAQ,cAAc;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAO,YAAY;AACnB,OAAO,sBAAsB;AAG7B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC,QAAQ,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEL,QAAQ,CAAC;EAC9D,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAKQ,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BT,OAAA,CAACL,MAAM;MACLe,YAAY,EAAE,CAAE,CAAC;MAAA;MACjBC,aAAa,EAAE,CAAE,CAAC;MAAA;MAClBC,IAAI,EAAE,IAAK,CAAC;MAAA;MACZC,QAAQ,EAAE;QAAEC,KAAK,EAAE,IAAI;QAAEC,oBAAoB,EAAE;MAAM,CAAE,CAAC;MAAA;MACxDC,OAAO,EAAE,CAACnB,QAAQ,CAAE;MACpBoB,aAAa,EAAGC,MAAM,IAAKb,eAAe,CAACa,MAAM,CAACC,SAAS,CAAE,CAAC;MAAA;MAAAV,QAAA,EAE7DP,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACpBrB,OAAA,CAACJ,WAAW;QAAAa,QAAA,eACVT,OAAA,CAACF,WAAW;UACVwB,KAAK,EAAED,OAAO,CAACC,KAAM;UACrBC,IAAI,EAAEF,OAAO,CAACE,IAAK;UACnBC,KAAK,EAAE,IAAIH,OAAO,CAACG,KAAK,EAAG;UAC3BC,QAAQ,EAAEJ,OAAO,CAACI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC,GANcR,OAAO,CAACS,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOhB,CACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9BIF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}