{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rodri\\\\tp\\\\ElectroShop\\\\frontEnd\\\\src\\\\pages\\\\productsSection.jsx\",\n  _s = $RefreshSig$();\n/*import React, {useEffect,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductCard from \"../components/productCard\";\r\nimport CarouselProducts from \"../components/carouselProducts\";\r\n\r\nconst ProductsSection = () => {\r\n    const [products, setProducts] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(\"http://localhost:5000/api/products\") // Endpoint del backend\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          setProducts(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al obtener los productos:\", error);\r\n        });\r\n    }, []);\r\n  \r\n    return (\r\n      <section id=\"productos\" className=\"container my-5\">\r\n        <h2 className=\"text-center mb-4\">Most Wanted</h2>\r\n\r\n        <CarouselProducts products={products}/>\r\n        <div className=\"row\">\r\n        \r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n  \r\n  export default ProductsSection;*/\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Importamos axios\nimport ProductCarousel from '../components/carouselProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsSection = () => {\n  _s();\n  const [productos, setProductos] = useState([]); // Estado para los productos\n  const [isLoading, setIsLoading] = useState(true); // Estado para saber si estamos cargando los productos\n  const [error, setError] = useState(null); // Estado para manejar errores\n\n  useEffect(() => {\n    // Función para obtener los productos usando axios\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/products\"); // Reemplaza con la URL de tu API\n        setProductos(response.data); // Guardamos los productos en el estado\n        setIsLoading(false); // Cambiamos el estado de \"cargando\" a falso\n      } catch (error) {\n        console.error(\"Error al cargar productos:\", error);\n        setError('Hubo un error al cargar los productos.');\n        setIsLoading(false); // También dejamos de mostrar \"cargando\"\n      }\n    };\n    fetchProducts(); // Llamada a la API\n  }, []); // Este efecto solo se ejecuta una vez cuando el componente se monta\n\n  // Mostrar mensaje de carga mientras estamos esperando los productos\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando productos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this);\n  }\n\n  // Si hay un error, mostrarlo\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 14\n    }, this);\n  }\n\n  // Una vez que los productos estén cargados, mostramos el carousel\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"productos\",\n    className: \"container my-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-4\",\n      children: \"Most Wanted\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProductCarousel, {\n      products: productos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(ProductsSection, \"gY2rwGeV/e2yTkYncDcwfZaJtIM=\");\n_c = ProductsSection;\nexport default ProductsSection;\nvar _c;\n$RefreshReg$(_c, \"ProductsSection\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProductCarousel","jsxDEV","_jsxDEV","ProductsSection","_s","productos","setProductos","isLoading","setIsLoading","error","setError","fetchProducts","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","products","_c","$RefreshReg$"],"sources":["C:/Users/rodri/tp/ElectroShop/frontEnd/src/pages/productsSection.jsx"],"sourcesContent":["/*import React, {useEffect,useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ProductCard from \"../components/productCard\";\r\nimport CarouselProducts from \"../components/carouselProducts\";\r\n\r\nconst ProductsSection = () => {\r\n    const [products, setProducts] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      axios\r\n        .get(\"http://localhost:5000/api/products\") // Endpoint del backend\r\n        .then((response) => {\r\n          console.log(response.data)\r\n          setProducts(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error al obtener los productos:\", error);\r\n        });\r\n    }, []);\r\n  \r\n    return (\r\n      <section id=\"productos\" className=\"container my-5\">\r\n        <h2 className=\"text-center mb-4\">Most Wanted</h2>\r\n\r\n        <CarouselProducts products={products}/>\r\n        <div className=\"row\">\r\n        \r\n        </div>\r\n      </section>\r\n    );\r\n  };\r\n  \r\n  export default ProductsSection;*/\r\n  import React, { useState, useEffect } from 'react';\r\n  import axios from 'axios';  // Importamos axios\r\n  import ProductCarousel from '../components/carouselProducts';\r\n  \r\n  const ProductsSection = () => {\r\n    const [productos, setProductos] = useState([]);  // Estado para los productos\r\n    const [isLoading, setIsLoading] = useState(true);  // Estado para saber si estamos cargando los productos\r\n    const [error, setError] = useState(null);  // Estado para manejar errores\r\n  \r\n    useEffect(() => {\r\n      // Función para obtener los productos usando axios\r\n      const fetchProducts = async () => {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:5000/api/products\"); // Reemplaza con la URL de tu API\r\n          setProductos(response.data);  // Guardamos los productos en el estado\r\n          setIsLoading(false);  // Cambiamos el estado de \"cargando\" a falso\r\n        } catch (error) {\r\n          console.error(\"Error al cargar productos:\", error);\r\n          setError('Hubo un error al cargar los productos.');\r\n          setIsLoading(false);  // También dejamos de mostrar \"cargando\"\r\n        }\r\n      };\r\n  \r\n      fetchProducts();  // Llamada a la API\r\n    }, []);  // Este efecto solo se ejecuta una vez cuando el componente se monta\r\n  \r\n    // Mostrar mensaje de carga mientras estamos esperando los productos\r\n    if (isLoading) {\r\n      return <p>Cargando productos...</p>;\r\n    }\r\n  \r\n    // Si hay un error, mostrarlo\r\n    if (error) {\r\n      return <p>{error}</p>;\r\n    }\r\n  \r\n    // Una vez que los productos estén cargados, mostramos el carousel\r\n    return (\r\n      <section id=\"productos\" className=\"container my-5\">\r\n        <h2 className=\"text-center mb-4\">Most Wanted</h2>\r\n        {/* Solo mostramos el carousel cuando los productos estén disponibles */}\r\n        <ProductCarousel products={productos} />\r\n      </section>\r\n    );\r\n  };\r\n  \r\n  export default ProductsSection;\r\n  "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,OAAOC,eAAe,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EACjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAC;QACxEP,YAAY,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;QAC9BN,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdM,OAAO,CAACN,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAAC,wCAAwC,CAAC;QAClDF,YAAY,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB;IACF,CAAC;IAEDG,aAAa,CAAC,CAAC,CAAC,CAAE;EACpB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET;EACA,IAAIJ,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAc,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACrC;;EAEA;EACA,IAAIX,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAc,QAAA,EAAIP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;;EAEA;EACA,oBACElB,OAAA;IAASmB,EAAE,EAAC,WAAW;IAACC,SAAS,EAAC,gBAAgB;IAAAN,QAAA,gBAChDd,OAAA;MAAIoB,SAAS,EAAC,kBAAkB;MAAAN,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjDlB,OAAA,CAACF,eAAe;MAACuB,QAAQ,EAAElB;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEd,CAAC;AAAChB,EAAA,CAxCID,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}